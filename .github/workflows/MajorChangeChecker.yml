name: DataMiner CICD NuGet Solution

on:
  push:
    branches:
      - '**'
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-**"

  workflow_dispatch:

jobs:
  CICD:
    uses: SaraSA10/.github/workflows/private-dataminer-cicd-nugetsolution.yml@main
    with:
      sonarCloudProjectName: SaraSA10_Skyline.DataMiner.CICD.Validators
    secrets:
      #nugetApiKey: ${{ secrets.NUGETAPIKEY }}
      sonarCloudToken: ${{ secrets.SONARCLOUD_TOKEN }}
  
  export:
    if: github.ref_type == 'tag'
    needs: CICD
    name: Export Error Messages
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Building
        run: dotnet build "./ExportErrorMessages/ExportErrorMessages.csproj" --configuration Release -nodeReuse:false

      - name: Run export logic
        run: | 
          ./ExportErrorMessages ${{ github.workspace }}/Protocol/ErrorMessages.xml ${{ github.ref_name }} ${{ github.workspace }}/TEMP
        working-directory: ${{ github.workspace }}/ExportErrorMessages/bin/Release/net8.0

      - name: Update release
        uses: ncipollo/release-action@v1.14.0
        with:
            name: Release v${{ github.ref_name }}
            allowUpdates: true
            artifacts: "${{ github.workspace }}/TEMP/Validator Error Messages - ${{ github.ref_name }}.xlsx"
            omitBodyDuringUpdate: true

  # NEW: Major Change Checker Job
  major-change-checker:
    name: Major Change Checker
    runs-on: ubuntu-latest
    # Run on specific branches or tags
    if: github.ref == 'refs/heads/V2' || github.ref == 'refs/heads/main' || github.ref_type == 'tag'
    
    steps:
    - name: Checkout V2 branch (where Validator code is updated)
      uses: actions/checkout@v4
      with:
        ref: V2  # Checkout the branch with your updated Validator code
        fetch-depth: 0
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        
    - name: Install Validator Tool
      run: dotnet tool install --global Skyline.DataMiner.CICD.Tools.Validator --version 1.5.0-alpha
      
    - name: Create output directory
      run: mkdir -p ./mcc-results
      
    - name: Run Major Change Checker
      run: |
        validator major-change-checker \
          --mcc-solution-path "." \
          --mcc-output-directory "./mcc-results" \
          --catalog-id "${{ secrets.CATALOG_ID }}" \
          --catalog-api-key "$CATALOG_API_KEY" \
          --output-format "JSON,HTML" \
          --include-suppressed false
      env:
        CATALOG_API_KEY: ${{ secrets.CATALOG_API_KEY }}
        
    - name: Upload MCC results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcc-results-${{ github.ref_name }}-${{ github.run_id }}
        path: ./mcc-results/*
        retention-days: 30
